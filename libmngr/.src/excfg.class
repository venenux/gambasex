' Gambas class file

Export

Inherits Collection

''' clase de configuracion inicial, inicia parametros de la aplicacion sea cliente o servidor y establece a donde se conectara asi como datos de entidad y conectividad

'' dia y hora, sin minutos, en que establece los datos
Private diadb As String = Format$(Now, "yyyymmddhh")
'' nombre de archivo trabajo local por el sistema, usa 'diadb' como sufijo
Private fileconfname As String = "exappconfig.conf"
'' ruta completa a el archivo la ruta en uso por instancia
Private fileconfruta As String = Application.path
'' direccion del archvo cfg con ruta y nombre configurado
Private filecfgfi As String = fileconfruta &/ fileconfname
'' direccion del archvo db con ruta y nombre configurado
Private filecfgdb As String = fileconfruta &/ "exdatabase.conf"

'' abstracion de la configuracion principal
Private $appconfig As Settings = Null
'' abstracion de la configuracion basedatos
Private $appconfdb As Settings = Null
'' semaforo que determina si esta desde desarrollo
Private $apponide As Boolean = Null

'' propiedad que contiene ya cargado toda la configuraciones de aplicacion
Property appconfig As Settings

'' propiedad que contiene ya cargado toda la configuraciones de db
Property appconfdb As Settings



Private Sub preparefileconf()
    
    Dim filenameold As String = ""
    Dim pathseppos0, pathseppos1, pathseppos2 As Integer = 0
    
    pathseppos0 = InStr(filecfgfi, "/")
    pathseppos1 = RInStr(filecfgfi, "/")
    pathseppos2 = RInStr(filecfgfi, ".conf")
    fileconfname = Mid(filecfgfi, pathseppos1 + 1)
    fileconfruta = Mid(filecfgfi, 1, pathseppos1 - 1)
    filenameold = fileconfname
    $apponide = exapp.Runide()
    If $apponide = -2 Then
        filecfgfi = Application.path &/ fileconfname
    Else
        If pathseppos0 < 1 Or pathseppos0 > 2 Then
            filecfgfi = Application.Path &/ filecfgfi
        Endif
        If pathseppos0 < 1 Or pathseppos0 > 2 Then
            fileconfruta = Mid(filecfgfi, 1, RInStr(filecfgfi, "/") - 1)
        Endif
        If pathseppos1 < 1 Or Comp(Trim(fileconfruta), "", gb.IgnoreCase) = 0 Then
            fileconfruta = Application.Path
        Endif
        If fileconfname = Null And pathseppos2 < 1 Then
            fileconfname = "exappconfig.conf"
        Endif
        If fileconfname <> Null And pathseppos2 < 1 Then
            fileconfname = fileconfname & ".conf"
        Endif
        If filecfgfi = Null Or Comp(filecfgfi, "", gb.IgnoreCase) = 0 Then
            filecfgfi = fileconfruta &/ fileconfname ' si no hay ruta o es nula armada de los individuales, en la siguiente corrobora que coordinen
        Endif
        If InStr(filecfgfi, fileconfname, 1, gb.IgnoreCase) < 1 Then
            filecfgfi = fileconfruta &/ fileconfname ' debe estar en la ruta el archivo con extension y tambien al menos dos barras
        Endif
    Endif
    If Not Exist(filecfgfi) Then
        filecfgfi = "/etc" &/ filenameold
    Endif
    If Not Exist(filecfgfi) Then
        filecfgfi = "/etc/exappconfig.conf"
    Endif
    If Not Exist(filecfgfi) Then
        filecfgfi = "/etc" &/ Application.Name & ".conf"
    Endif
    If Not Exist(filecfgfi) Then
        filecfgfi = User.Home &/ "." & fileconfname
        Try Copy Application.path &/ fileconfname To filecfgfi
        If Not Exist(filecfgfi) Then
            filecfgfi = Application.path &/ "exappconfig.conf"
        Endif
    Endif
    pathseppos1 = RInStr(filecfgfi, "/")
    pathseppos2 = RInStr(filecfgfi, ".conf")
    fileconfname = Mid(filecfgfi, pathseppos1 + 1)
    fileconfruta = Mid(filecfgfi, 1, pathseppos1 - 1)
    ' filecfgfi listo ahora el de db
    filecfgdb = fileconfruta &/ "exdatabase.conf"
    
End

'' si en el argumento se para la ruta completa la ruta base de la aplicacion sera la del aplicativo, sino sera app.path de la lib
Public Sub _new(Optional filename As String = Application.Name &/ Application.Name & ".conf")
    
    Dim cabeceraappconfig As String
    Dim cabeceradbconfig As String
    
    '' prepar con valores por defecto antes de revisar los que se piden
    If InStr(filename, "/", 0, gb.IgnoreCase) > 0 Then
        filecfgfi = filename
        fileconfname = Null
    Else
        filecfgfi = Null
        fileconfname = filename
    Endif
    '' despues preparo pero con los archivos que se piden
    preparefileconf
    
    $appconfig = New Settings(filecfgfi)
    $appconfdb = New Settings(filecfgdb)
    
    preparevalores
    ' en cualquier caso, esto solo es en desarrollo, en produccion, creara un archivo nuevo vacio porque no encontrara cual copiar
    
End

Private Sub preparevalores()
    
    Dim dbdefaultits As Boolean = False
    Dim apppath As String
    Dim var001, var002 As String
    Dim sSlot, sKey, value As String = exapp.Null
    
    apppath = fileconfruta
    
    For Each sSlot In $appconfig.Keys               ' for each section in the config file
        If Comp("application", sSlot, gb.IgnoreCase) = 0 Then
            $appconfig[sSlot & "/apptype"] = $appconfig[sSlot & "/apptype", "app"]
            value = $appconfig[sSlot & "/apptype"]
            If Comp(value, "app", gb.IgnoreCase) = 0 Then
                $appconfig[sSlot & "/appbase"] = $appconfig[sSlot & "/appbase", fileconfruta]
                $appconfig[sSlot & "/appurl"] = $appconfig[sSlot & "/appurl", exapp.Null]
                $appconfig[sSlot & "/appindex"] = $appconfig[sSlot & "/appindex", exapp.Null]
            Endif
            value = $appconfig[sSlot & "/apptype"]
            If Comp(value, "web", gb.IgnoreCase) = 0 Then
                $appconfig[sSlot & "/appbase"] = $appconfig[sSlot & "/appbase", fileconfruta]
                $appconfig[sSlot & "/appurl"] = $appconfig[sSlot & "/appurl", exapp.Null]
                $appconfig[sSlot & "/appindex"] = $appconfig[sSlot & "/appindex", exapp.Null]
            Endif
        Endif
        If Comp("ubication", sSlot, gb.IgnoreCase) = 0 Then
            $appconfig[sSlot & "/appubiusr"] = $appconfig[sSlot & "/appubiusr", "9997"]
            $appconfig[sSlot & "/appubirun"] = $appconfig[sSlot & "/appubirun", "9998"]
            $appconfig[sSlot & "/appubiapp"] = $appconfig[sSlot & "/appubiapp", "9999"]
        Endif
    Next
    
    $appconfdb["database/activegroup"] = $appconfig["database/activegroup", "default"]
    $appconfdb["default/dbdriver"] = $appconfig["default/dbdriver", "sqlite3"]
    var001 = $appconfdb["default/dbdriver"]
    If Comp(var001, "sqlite3", gb.IgnoreCase) = 0 Then
        $appconfdb["default/username"] = $appconfig["default/username", exapp.Null]
        $appconfdb["default/password"] = $appconfig["default/password", exapp.Null]
        $appconfdb["default/database"] = $appconfig["default/database", exapp.Null] ' db en ram si no se especifica
        $appconfdb["default/hostname"] = $appconfig["default/hostname", exapp.Null]
    Else
        $appconfdb["default/username"] = $appconfig["default/username", "dba"]
        $appconfdb["default/password"] = $appconfig["default/password", "sql"]
        $appconfdb["default/database"] = $appconfig["default/database", "appdatabase"]
        $appconfdb["default/hostname"] = $appconfig["default/hostname", "127.0.0.1"]
        If Comp($appconfdb["default/hostname"], exapp.Null) = 0 Or Comp($appconfdb["default/hostname"], Null) Then
            $appconfdb["default/dbdriver"] = $appconfig["default/dbdriver", "sqlite3"]
            $appconfdb["default/username"] = $appconfig["default/username", exapp.Null]
            $appconfdb["default/password"] = $appconfig["default/password", exapp.Null]
            $appconfdb["default/database"] = $appconfig["default/database", exapp.Null] ' db en ram si no se especifica
            $appconfdb["default/hostname"] = $appconfig["default/hostname", exapp.Null]
        Endif
    Endif
    
    For Each sSlot In $appconfig.Keys               ' for each section in the config file
        For Each sKey In $appconfig.Keys[sSlot]
            
            Me.Add($appconfig[sSlot &/ sKey], sSlot &/ sKey)
        Next
    Next
    For Each sSlot In $appconfdb.Keys               ' for each section in the config file
        For Each sKey In $appconfdb.Keys[sSlot]
            Me.Add($appconfdb[sSlot &/ sKey], sSlot &/ sKey)
        Next
    Next
    
End



Public Sub _get(Key As String) As Variant
  
  Dim vVal As Variant
  
  vVal = Super[Key]
  If TypeOf(vVal) = gb.Pointer And If vVal = exapp.Null Then vVal = Null
  Return vVal
  
End

Public Sub _put(Value As Variant, Key As String)
  
  If IsNull(Value) Then Value = exapp.Null
  Super[Key] = Value
  
End

Public Sub _next() As Variant
  
  Super._next()
  If Not Enum.Stopped Then Return _get(Me.Key)
  
End


Private Function appconfdb_Read() As Settings

    Return $appconfdb

End

Private Sub appconfdb_Write(Value As Settings)


End

Private Function appconfig_Read() As Settings

    Return $appconfig

End

Private Sub appconfig_Write(Value As Settings)

    

End
